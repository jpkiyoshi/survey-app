import Head from 'next/head';
import CreateSurvey from '../components/CreateSurvey';
import { Auth } from '@supabase/auth-ui-react';
import { ThemeSupa } from '@supabase/auth-ui-shared';
import { useSession, useSupabaseClient } from '@supabase/auth-helpers-react';
import Account from '../components/Account';
import { GetServerSideProps } from 'next';
import { supabase } from '../lib/supabaseClient';
import { Database } from '@/utils/database.types';
import { ChangeEvent, FormEvent, useState } from 'react';
import Link from 'next/link';

const ptbrFields = {
	variables: {
		sign_up: {
			email_label: 'Endereço de email',
			password_label: 'Criar uma senha',
			email_input_placeholder: 'Seu endereço de email',
			password_input_placeholder: 'Sua senha',
			button_label: 'Cadastrar',
			loading_button_label: 'Cadastrando...',
			social_provider_text: 'Entrar com {{provider}}',
			link_text: 'Não possui uma conta? Cadastre-se',
			confirmation_text: 'Verifique seu email para o link de confirmação',
		},
		sign_in: {
			email_label: 'Endereço de Email',
			password_label: 'Sua Senha',
			email_input_placeholder: 'Seu endereço de email',
			password_input_placeholder: 'Sua senha',
			button_label: 'Entrar',
			loading_button_label: 'Entrando ...',
			social_provider_text: 'Entrar com {{provider}}',
			link_text: 'Já possui uma conta? Entre',
		},

		forgotten_password: {
			email_label: 'Endereço de Email',
			password_label: 'Sua Senha',
			email_input_placeholder: 'Seu endereço de email',
			button_label: 'Enviar instruções para redefinir a senha',
			loading_button_label: 'Enviando instruções ...',
			link_text: 'Esqueceu sua senha?',
			confirmation_text: 'Verifique seu email para o link de redefinição de senha',
		},
		update_password: {
			password_label: 'Nova senha',
			password_input_placeholder: 'Sua nova senha',
			button_label: 'Atualizar senha',
			loading_button_label: 'Atualizando senha ...',
			confirmation_text: 'Sua senha foi atualizada',
		},
	},
};

export default function Home() {
	// const session = useSession();
	// const supabase = useSupabaseClient();
	const [surveyOptions, setSurveyOptions] = useState<string[]>(['Opção 1', 'Opção 2']);

	const handleSurveyOptions = (newOptions: string[]) => {
		setSurveyOptions(newOptions);
	};

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<div className='container' style={{ padding: '50px 0 100px 0' }}>
				<CreateSurvey
					surveyOptions={surveyOptions}
					handleSurveyOptions={handleSurveyOptions}
				/>
				<br />
				<br />
				<Link
					style={{
						border: '1px solid gray',
						borderRadius: '5px',
						padding: '10px 20px',
						textDecoration: 'none',
					}}
					href='show-surveys'
				>
					VOTAR NA ENQUETE
				</Link>
				{/* {!session ? (
					<>
						<Auth
							providers={['google']}
							supabaseClient={supabase}
							appearance={{ theme: ThemeSupa }}
							theme='dark'
							localization={ptbrFields}
						/>
						<div>
							<ul>
								{profiles.map(profile => (
									<li key={profile.id}>{profile.username}</li>
								))}
							</ul>
						</div>
					</>
				) : (
					<Account session={session} />
				)} */}
			</div>
		</>
	);
}
